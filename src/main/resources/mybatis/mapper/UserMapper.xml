<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baiying.hu.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.baiying.hu.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="realName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="phone" property="phone" jdbcType="BIGINT"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="city_id" property="cityId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="service_provider" property="serviceProvider" jdbcType="INTEGER"/>
        <result column="company_authenticate" property="companyAuthenticate" jdbcType="INTEGER"/>
        <result column="business_id" property="businessId" jdbcType="VARCHAR"/>
        <result column="id_card_photo" property="idCardPhoto" jdbcType="VARCHAR"/>
        <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
        <result column="business_license_photo" property="businessLicensePhoto" jdbcType="VARCHAR"/>
        <result column="company_name" property="companyName" jdbcType="VARCHAR"/>
        <result column="invite_code" property="inviteCode" jdbcType="VARCHAR"/>

    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, username, password, token, created_at, updated_at, phone, nick_name, city_id, 
    status,service_provider,company_authenticate,business_id,id_card_photo,business_license_photo,company_name,invite_code

  </sql>
    <sql id="Result_Column_List">
        id,created_at, updated_at, phone, nick_name, city_id,
        status,service_provider,company_authenticate,business_id,id_card_photo,business_license_photo,company_name,invite_code
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.baiying.hu.entity.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Result_Column_List"/>
        from t_davince_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_davince_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_davince_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.baiying.hu.entity.UserExample">
        delete from t_davince_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.baiying.hu.entity.User" useGeneratedKeys="true"
            keyProperty="id">
    insert into t_davince_user (username, password,
      token ,phone, nick_name, city_id,
      status,business_id,id_card_photo,id_card,service_provider,business_license_photo,company_authenticate)
    values (#{realName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{token,jdbcType=VARCHAR}, #{phone,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR},#{businessId},#{idCardPhoto},#{idCard},#{serviceProvider},#{businessLicensePhoto},#{companyAuthenticate})
  </insert>
    <insert id="insertSelective" parameterType="com.baiying.hu.entity.User">
        insert into t_davince_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="cityId != null">
                city_id,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.baiying.hu.entity.UserExample" resultType="java.lang.Integer">
        select count(*) from t_davince_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_davince_user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.realName != null">
                username = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.token != null">
                token = #{record.token,jdbcType=VARCHAR},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=BIGINT},
            </if>
            <if test="record.nickName != null">
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.cityId != null">
                city_id = #{record.cityId,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_davince_user
        set
        username = #{record.realName,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        token = #{record.token,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=BIGINT},
        nick_name = #{record.nickName,jdbcType=VARCHAR},
        city_id = #{record.cityId,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.baiying.hu.entity.User">
        update t_davince_user
        <set>
            <if test="realName != null">
                username = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                city_id = #{cityId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.baiying.hu.entity.User">
    update t_davince_user
    set username = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=BIGINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="userCompanyRegister" parameterType="com.baiying.hu.entity.dto.UserRegisterDto">
        UPDATE t_davince_user
        SET
        <if test="realName!=null and realName!=''">
            real_name = #{realName},
        </if>
        <if test="companyName!=null and companyName!=''">
            company_name = #{companyName},
        </if>
        <if test="idCard!=null and idCard!=''">
            id_card = #{idCard},
        </if>
        <if test="idCardPhoto!=null and idCardPhoto!=''">
            id_card_photo = #{idCardPhoto},
        </if>
        <if test="businessId!=null and businessId!=''">
            business_id = #{businessId},
        </if>
        <if test="serviceProvider!=null and serviceProvider!=''">
            service_provider = #{serviceProvider},
        </if>
        <if test="companyAuthenticate!=null and companyAuthenticate!=''">
            company_authenticate = #{companyAuthenticate},
        </if>
        <if test="businessLicensePhoto!=null and businessLicensePhoto!=''">
            business_license_photo = #{businessLicensePhoto}
        </if>
        WHERE id = #{id}
    </update>
    <select id="getServiceList" resultType="map">
        SELECT id,
              real_name as realName,
              company_name as companyName
        FROM t_davince_user
        WHERE service_provider = 2;
    </select>
    <update id="authorServiceProvider" parameterType="map">
        UPDATE t_davince_user
        <set>
            <if test="status!=null">
                status = #{status},
            </if>
            <if test="serviceProvider!=null">
                service_provider = #{serviceProvider},

            </if>
            <if test="authorCompany!=null">
                company_authenticate = #{authorCompany}
            </if>

        </set>
        WHERE id = #{id}
    </update>

</mapper>